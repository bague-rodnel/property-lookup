For the backend, We're going to implement a Node + Express web server that exposes a GraphQL API.
Implement a database with two models, Users and Properties. (We use postgres + sequelize, but you can choose whatever you're most comfortable with)

The models would look something like:

User
- id (string) - "5592d311d7c6770300911b65"
- firstName (String) - "John"
- lastName (String) - "Smith"

Property
- id (string) - "5592d311d7c6770300911b65" -- graPHQLID?
- street (string) - "505 South Market St"
- city (string) - "San Jose"
- state (string) - "CA"
- zip (string) - "95008"
- rent (number) - 3500  --

A user can have many properties.
 -- or none (renter, sold off);
 -- property has a userId for the owner,

The API will only have a single GraphQL end point.
 -- done exposing end point
 -- i need to know how to consume it

query search()

which should return users and/or properties that match the search string.
if the result contains a user, the users properties must also be shown for the results.
  -- filter users
  -- filter properties

On the frontend, build a single page app which will show a text input and a submit button. Once the submit button is clicked, it will then send an asynchronous request to your GraphQL server and do the search based on the string input. Finally, display the result (properties) in list format.

We use nodejs for backend and react for the frontend. Feel free to use any supplementary libraries on top of react and node.

If you can implement autocomplete that would be a bonus.
Feel free to add any features you can squeeze in. :)

